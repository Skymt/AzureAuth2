#Make sure this URL matches your current launch profile.
@SessionService = https://localhost:7025

#This token is valid for 30 seconds after the project starts.
@AuthToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IkhhY2tlck1hbjIwMDAiLCJyb2xlIjoiRGV2ZWxvcGVyIiwiQ3VzdG9tVHlwZSI6IkN1c3RvbVZhbHVlIiwibmJmIjoxNjQwOTk1MjAwLCJleHAiOjE2NDA5OTUyMzAsImlhdCI6MTY0MDk5NTIwMCwiaXNzIjoiRGV2ZWxvcGVyQXV0aG9yaXplciIsImF1ZCI6IkRldmVsb3BlcnMifQ.IpRYOog77UYn8XuLQ3CrGXbnKd-WtQiQDDXq5wcYUOU

#Start new session from auth token
PATCH {{SessionService}}/login
Accept: application/json
Authorization: Bearer {{AuthToken}}
# Returns the new JWT, a suggested delay for the next 
# refresh and the rowkey to the claims table data
# in an http-only cookie.

###

# To make sure this refresh-token is valid, copy it from
# the Set-Cookie header of the previous response.
@RefreshToken = abcdef01-2345-6789-abcd-ef0123456789

# Resume a session using a refresh token
PATCH {{SessionService}}/login
Accept: application/json
Cookie: AuthId={{RefreshToken}}
# This will consume the table storage row, thus requests
# for a specific auth-id will only work once.

###

# Deletes the row from table storage (if it exists)
# and invalidates the refresh token cookie.
PATCH {{SessionService}}/logout

###